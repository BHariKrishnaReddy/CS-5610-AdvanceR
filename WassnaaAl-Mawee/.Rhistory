data = training_set)
# Print the summary of the linear regression model
summary(linear_regression_model)
# ii) Evaluate the quality of the model. What is the R^2 value? (Note that this is called "Multiple R-squared" in some software output.)
summary(linear_regression_model)$r.squared
print("Value of R^2 is 0.7508933")
# Which independent variables are significant?
print("The significant values are:  MEI, CO2, CH4, N2O, CFC, TSI and Aerosols.")
# iii)
print("All the gas concentration variables reflect human development - N2O and CFC.11 are correlated with other variables in the data set.I mean That the linear regression model's negative regression coefficients for N2O and CFC-11 are expected, as these gases are thought to contribute to global warming by trapping heat in the atmosphere. It's important to understand that the linear regression model does not necessarily imply a causal relationship; rather, it demonstrates a statistical association between variables.")
# iv) Compute the correlations between all the independent variables in the training set.
cor(training_set)
# Which independent variables is N2O highly correlated with (absolute correlation greater than 0.7)?
print("CO2, CH4, CFC.12")
# Which independent variables is CFC.11 highly correlated with(absolute correlation greater than 0.7)?
print("CH4, CFC.12")
# b)
# Now build a new model regression model, this time only using MEI, TSI, Aerosols and N2O as a independent variables. Remember to use the training set to build the model.
new_regression_model <- lm(Temp ~ MEI + TSI + Aerosols + N2O,
data=training_set)
# i) How does the coefficient for N2O in this model compared to the coefficient in the previous model?
print("2.532e-02  is the coefficient for N2O in this model, where as -1.653e-02 is the the coefficient for N2O in the previous model.")
# ii)
print("The R-squared value of new model is 0.7261321, where as the R-squared value of old model is 0.7508933. The quality of the new model has reduced.")
knitr::opts_chunk$set(echo = TRUE)
set.seed(318)
n=1000
m=1
random_samples=rcauchy(n,m,1)
mle <- function(m)
{
sum((2*(random_samples-m))/(1+(random_samples-m)^2))
}
uniroot(mle, c(-3, 3))$root
library(numDeriv)
mle_n <- function(m, n = 1000, rs = random_samples)
{
-n*log(pi) - sum(log(1+(rs-m)^2))
}
m <- 2
for(i in 1:20)
{
z <- genD(func = mle_n, x = m)$D[1]
z_1 <- genD(func = mle_n, x = m)$D[2]
result <- m - z/z_1
m <- result
print(result, digits = 10)
}
data <- read.table("poisson.txt",header=T)
data <- read.table("poisson.txt",header=T)
head(data)
attach(data)
g <- function(x, y, beta_0, beta_1)
{
g <- rep(0, 2)
g[1] <- sum(- exp(beta_0 + beta_1*x)+y)
g[2] <- sum((- exp(beta_0 + beta_1*x)+y)*x)
return(g)
}
new <- function(x, beta_0, beta_1)
{
new <- matrix(0, nrow = 2, ncol = 2)
new[1,1] <- -sum(exp(beta_0+beta_1*x))
new[1,2] <- -sum((exp(beta_0+beta_1*x))*x)
new[2,1] <- new[1,2]
new[2,2] <- -sum((exp(beta_0+beta_1*x))*(x^2))
return(new)
}
beta <- c(0,0)
for(i in 1:10)
{
beta_2 <- beta - solve(new(x = x, beta_0 = beta[1], beta_1 = beta[2])) %*% g(x = x, y = y, beta_0 = beta[1], beta_1 = beta[2])
beta <- beta_2
print(beta_2, digits = 10)
}
attach(data)
g <- function(x, y, beta_0, beta_1)
{
g <- rep(0, 2)
g[1] <- sum(- exp(beta_0 + beta_1*x)+y)
g[2] <- sum((- exp(beta_0 + beta_1*x)+y)*x)
return(g)
}
new <- function(x, beta_0, beta_1)
{
new <- matrix(0, nrow = 2, ncol = 2)
new[1,1] <- -sum(exp(beta_0+beta_1*x))
new[1,2] <- -sum((exp(beta_0+beta_1*x))*x)
new[2,1] <- new[1,2]
new[2,2] <- -sum((exp(beta_0+beta_1*x))*(x^2))
return(new)
}
beta <- c(0,0)
for(i in 1:10)
{
beta_2 <- beta - solve(new(x = x, beta_0 = beta[1], beta_1 = beta[2])) %*% g(x = x, y = y, beta_0 = beta[1], beta_1 = beta[2])
beta <- beta_2
print(beta_2, digits = 10)
}
pr <- glm(y ~ x, family = poisson(), data=data)
summary(pr)
pr$coefficients
attach(data)
g <- function(data, beta_0, beta_1) {
g <- rep(0, 2)
g[1] <- sum(-exp(beta_0 + beta_1 * data$x) + data$y)
g[2] <- sum((-exp(beta_0 + beta_1 * data$x) + data$y) * data$x)
return(g)
}
new <- function(data, beta_0, beta_1) {
new <- matrix(0, nrow = 2, ncol = 2)
new[1, 1] <- -sum(exp(beta_0 + beta_1 * data$x))
new[1, 2] <- -sum((exp(beta_0 + beta_1 * data$x)) * data$x)
new[2, 1] <- new[1, 2]
new[2, 2] <- -sum((exp(beta_0 + beta_1 * data$x)) * (data$x^2))
return(new)
}
beta <- c(0, 0)
x <- data$x
y <- data$y
for (i in 1:10) {
beta_2 <- beta - solve(new(data, beta_0 = beta[1], beta_1 = beta[2])) %*% g(data, beta_0 = beta[1], beta_1 = beta[2])
beta <- beta_2
print(beta_2, digits = 10)
}
f <- function(beta, data) {
(-1) * sum(-exp(beta[1] + beta[2] * data$x) + (beta[1] + beta[2] * data$x) * data$y - log(factorial(data$y)))
}
optim(c(0, 0), f, data = data)$par
attach(data)
g <- function(data, beta_0, beta_1) {
g <- rep(0, 2)
g[1] <- sum(-exp(beta_0 + beta_1 * data$x) + data$y)
g[2] <- sum((-exp(beta_0 + beta_1 * data$x) + data$y) * data$x)
return(g)
}
new <- function(data, beta_0, beta_1) {
new <- matrix(0, nrow = 2, ncol = 2)
new[1, 1] <- -sum(exp(beta_0 + beta_1 * data$x))
new[1, 2] <- -sum((exp(beta_0 + beta_1 * data$x)) * data$x)
new[2, 1] <- new[1, 2]
new[2, 2] <- -sum((exp(beta_0 + beta_1 * data$x)) * (data$x^2))
return(new)
}
beta <- c(0, 0)
for (i in 1:10) {
beta_2 <- beta - solve(new(data, beta_0 = beta[1], beta_1 = beta[2])) %*% g(data, beta_0 = beta[1], beta_1 = beta[2])
beta <- beta_2
print(beta_2, digits = 10)
}
f <- function(beta, data) {
(-1) * sum(-exp(beta[1] + beta[2] * data$x) + (beta[1] + beta[2] * data$x) * data$y - log(factorial(data$y)))
}
optim(c(0, 0), f, data = data)$par
knitr::opts_chunk$set(echo = TRUE)
set.seed(318)
n=1000
m=1
random_samples=rcauchy(n,m,1)
mle <- function(m)
{
sum((2*(random_samples-m))/(1+(random_samples-m)^2))
}
uniroot(mle, c(-3, 3))$root
library(numDeriv)
mle_n <- function(m, n = 1000, rs = random_samples)
{
-n*log(pi) - sum(log(1+(rs-m)^2))
}
m <- 2
for(i in 1:20)
{
z <- genD(func = mle_n, x = m)$D[1]
z_1 <- genD(func = mle_n, x = m)$D[2]
result <- m - z/z_1
m <- result
print(result, digits = 10)
}
data <- read.table("poisson.txt",header=T)
head(data)
attach(data)
g <- function(x, y, beta_0, beta_1)
{
g <- rep(0, 2)
g[1] <- sum(- exp(beta_0 + beta_1*x)+y)
g[2] <- sum((- exp(beta_0 + beta_1*x)+y)*x)
return(g)
}
new <- function(x, beta_0, beta_1)
{
new <- matrix(0, nrow = 2, ncol = 2)
new[1,1] <- -sum(exp(beta_0+beta_1*x))
new[1,2] <- -sum((exp(beta_0+beta_1*x))*x)
new[2,1] <- new[1,2]
new[2,2] <- -sum((exp(beta_0+beta_1*x))*(x^2))
return(new)
}
beta <- c(0,0)
for(i in 1:10)
{
beta_2 <- beta - solve(new(x = x, beta_0 = beta[1], beta_1 = beta[2])) %*% g(x = x, y = y, beta_0 = beta[1], beta_1 = beta[2])
beta <- beta_2
print(beta_2, digits = 10)
}
f <- function(beta, y=data$y , x=data$x)
{
(-1)*sum(-exp(beta[1]+beta[2]*x)+(beta[1]+beta[2]*x)*y-log(factorial(y)))
}
optim(c(0,0), f)$par
pr <- glm(y ~ x, family = poisson(), data=data)
summary(pr)
pr$coefficients
knitr::opts_chunk$set(echo = TRUE)
# Create the rating table
ratings <- data.frame(
user = c("Amy", "Bob", "Carl", "Dan", "Eva"),
F = c(5, 3, NA, 4, 4),
G = c(NA, 5, 3, 5, 4),
I = c(4, 2, 5, 4, NA),
J = c(3, 5, 4, NA, 3)
)
# Calculate rating averages and standard deviations
rating_avg <- colMeans(ratings[, -1], na.rm = TRUE)
rating_sd <- apply(ratings[, -1], 2, sd, na.rm = TRUE)
# Calculate similarities using correlation measure
similarity <- cor(t(ratings[, -1]), use = "pairwise.complete.obs")
# Prediction function
predict_rating <- function(user, item) {
numerator <- 0
denominator <- 0
for (u in 1:nrow(ratings)) {
if (!is.na(ratings[u, item])) {
similarity_value <- similarity[user, u]
if (!is.na(similarity_value) && similarity_value != 0) {  # Check for non-zero and non-missing similarity
numerator <- numerator + similarity_value * (ratings[u, item] - rating_avg[u])
denominator <- denominator + abs(similarity_value)
}
}
}
if (denominator == 0) return(NA)  # Handle division by zero
predicted_rating <- rating_avg[user] + numerator / denominator
return(predicted_rating)
}
# Predict Amy's rating for Godfather
predicted_A_G <- predict_rating(1, "G")
# Predict Dan's rating for Jaws
predicted_D_J <- predict_rating(4, "J")
# Print predicted ratings
print(predicted_A_G)
print(predicted_D_J)
# Comment on predicted ratings
if (!is.na(predicted_A_G) && !is.na(predicted_D_J)) {
recommend <- ifelse(predicted_A_G >= 4 && predicted_D_J >= 4, "yes", "no")
print(paste("Recommendation for customers:", recommend))
}
# api key = 4p2TY2sPaQXteLkh8U1gfmCrT
# api key Secret = 9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr
# brearer Token = AAAAAAAAAAAAAAAAAAAAAAuPtAEAAAAAisyHdDsuH14yIsDzog64no6qpjg%3DTHo1HByYfUDGerjl8qpAieA5JCNVFNiH6hVu1nm1tJ01LpIsYC
# access Token = 1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V
# ATSecret = BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe
#installing
install.packages("rtweet")
install.packages("tidytext")
# Load required libraries
library(rtweet)
library(ggplot2)
library(dplyr)
library(tidytext)
# Replace "your-app-name", "yourLongApiKeyHere", "yourSecretKeyHere", "yourAccessTokenHere", and "yourAccessSecretHere" with your actual values
# Set your Twitter app name, API key, API secret, access token, and access secret
appname <- "your-app-name"  # Replace with your app name
key <- "4p2TY2sPaQXteLkh8U1gfmCrT"  # Replace with your API key
secret <- "y9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr"  # Replace with your API secret
access_token <- "1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V"  # Replace with your access token
access_secret <- "BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe"  # Replace with your access secret
# Create Twitter token using rtweet
twitter_token <- create_token(
app = appname,
consumer_key = key,
consumer_secret = secret,
access_token = access_token,
access_secret = access_secret
)
# api key = 4p2TY2sPaQXteLkh8U1gfmCrT
# api key Secret = 9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr
# brearer Token = AAAAAAAAAAAAAAAAAAAAAAuPtAEAAAAAisyHdDsuH14yIsDzog64no6qpjg%3DTHo1HByYfUDGerjl8qpAieA5JCNVFNiH6hVu1nm1tJ01LpIsYC
# access Token = 1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V
# ATSecret = BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe
#installing
install.packages("rtweet")
install.packages("tidytext")
# Load required libraries
library(rtweet)
library(ggplot2)
library(dplyr)
library(tidytext)
# Replace "your-app-name", "yourLongApiKeyHere", "yourSecretKeyHere", "yourAccessTokenHere", and "yourAccessSecretHere" with your actual values
# Set your Twitter app name, API key, API secret, access token, and access secret
appname <- "your-app-name"  # Replace with your app name
key <- "4p2TY2sPaQXteLkh8U1gfmCrT"  # Replace with your API key
secret <- "y9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr"  # Replace with your API secret
access_token <- "1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V"  # Replace with your access token
access_secret <- "BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe"  # Replace with your access secret
auth <- rtweet_app()
# api key = 4p2TY2sPaQXteLkh8U1gfmCrT
# api key Secret = 9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr
# brearer Token = AAAAAAAAAAAAAAAAAAAAAAuPtAEAAAAAisyHdDsuH14yIsDzog64no6qpjg%3DTHo1HByYfUDGerjl8qpAieA5JCNVFNiH6hVu1nm1tJ01LpIsYC
# access Token = 1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V
# ATSecret = BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe
#installing
install.packages("rtweet")
install.packages("tidytext")
# Load required libraries
library(rtweet)
library(ggplot2)
library(dplyr)
library(tidytext)
# Replace "your-app-name", "yourLongApiKeyHere", "yourSecretKeyHere", "yourAccessTokenHere", and "yourAccessSecretHere" with your actual values
# Set your Twitter app name, API key, API secret, access token, and access secret
appname <- "your-app-name"  # Replace with your app name
key <- "4p2TY2sPaQXteLkh8U1gfmCrT"  # Replace with your API key
secret <- "y9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr"  # Replace with your API secret
access_token <- "1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V"  # Replace with your access token
access_secret <- "BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe"  # Replace with your access secret
auth <- rtweet_app()
install.packages("tidytext")
# api key = 4p2TY2sPaQXteLkh8U1gfmCrT
# api key Secret = 9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr
# brearer Token = AAAAAAAAAAAAAAAAAAAAAAuPtAEAAAAAisyHdDsuH14yIsDzog64no6qpjg%3DTHo1HByYfUDGerjl8qpAieA5JCNVFNiH6hVu1nm1tJ01LpIsYC
# access Token = 1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V
# ATSecret = BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe
#installing
install.packages("rtweet")
install.packages("tidytext")
# Load required libraries
library(rtweet)
library(ggplot2)
library(dplyr)
library(tidytext)
# Replace "your-app-name", "yourLongApiKeyHere", "yourSecretKeyHere", "yourAccessTokenHere", and "yourAccessSecretHere" with your actual values
# Set your Twitter app name, API key, API secret, access token, and access secret
appname <- "your-app-name"  # Replace with your app name
key <- "4p2TY2sPaQXteLkh8U1gfmCrT"  # Replace with your API key
secret <- "y9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr"  # Replace with your API secret
access_token <- "1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V"  # Replace with your access token
access_secret <- "BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe"  # Replace with your access secret
auth <- rtweet_app()
install.packages("tidytext")
install.packages("rtweet")
# Search for tweets related to R in Data Science
tweets <- search_tweets("R Data Science", n = 1000)
# Clean and preprocess the text data
clean_tweets <- tweets %>%
select(text) %>%
mutate(text = gsub("http\\S+\\s*", "", text)) %>%  # Remove URLs
unnest_tokens(word, text) %>%
anti_join(stop_words)  # Remove stop words
# Analyze the text data
word_counts <- clean_tweets %>%
count(word, sort = TRUE)
# Visualize the most common words
word_counts %>%
top_n(10) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(fill = "skyblue") +
labs(x = "Word", y = "Frequency", title = "Top 10 Most Common Words in Tweets About R in Data Science") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("rtweet")
# api key = 4p2TY2sPaQXteLkh8U1gfmCrT
# api key Secret = 9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr
# brearer Token = AAAAAAAAAAAAAAAAAAAAAAuPtAEAAAAAisyHdDsuH14yIsDzog64no6qpjg%3DTHo1HByYfUDGerjl8qpAieA5JCNVFNiH6hVu1nm1tJ01LpIsYC
# access Token = 1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V
# ATSecret = BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe
#installing
install.packages("rtweet")
install.packages("tidytext")
# Load required libraries
library(rtweet)
library(ggplot2)
library(dplyr)
library(tidytext)
# Replace "your-app-name", "yourLongApiKeyHere", "yourSecretKeyHere", "yourAccessTokenHere", and "yourAccessSecretHere" with your actual values
# Set your Twitter app name, API key, API secret, access token, and access secret
appname <- "your-app-name"  # Replace with your app name
key <- "4p2TY2sPaQXteLkh8U1gfmCrT"  # Replace with your API key
secret <- "y9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr"  # Replace with your API secret
access_token <- "1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V"  # Replace with your access token
access_secret <- "BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe"  # Replace with your access secret
auth <- rtweet_app()
install.packages("tidytext")
install.packages("rtweet")
# Search for tweets related to R in Data Science
tweets <- search_tweets(q = "R Data Science", n = 1000)
# Clean and preprocess the text data
clean_tweets <- tweets %>%
select(text) %>%
mutate(text = gsub("http\\S+\\s*", "", text)) %>%  # Remove URLs
unnest_tokens(word, text) %>%
anti_join(stop_words)  # Remove stop words
# Analyze the text data
word_counts <- clean_tweets %>%
count(word, sort = TRUE)
# Visualize the most common words
word_counts %>%
top_n(10) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(fill = "skyblue") +
labs(x = "Word", y = "Frequency", title = "Top 10 Most Common Words in Tweets About R in Data Science") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("rtweet")
# api key = 4p2TY2sPaQXteLkh8U1gfmCrT
# api key Secret = 9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr
# brearer Token = AAAAAAAAAAAAAAAAAAAAAAuPtAEAAAAAisyHdDsuH14yIsDzog64no6qpjg%3DTHo1HByYfUDGerjl8qpAieA5JCNVFNiH6hVu1nm1tJ01LpIsYC
# access Token = 1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V
# ATSecret = BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe
#libraries
install.packages("rtweet")
install.packages("tidytext")
library(tidytext)
library(rtweet)
library(ggplot2)
library(dplyr)
# Replace "your-app-name", "yourLongApiKeyHere", "yourSecretKeyHere", "yourAccessTokenHere", and "yourAccessSecretHere" with your actual values
# Set your Twitter app name, API key, API secret, access token, and access secret
appname <- "your-app-name"  # Replace with your app name
key <- "4p2TY2sPaQXteLkh8U1gfmCrT"  # Replace with your API key
secret <- "y9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr"  # Replace with your API secret
access_token <- "1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V"  # Replace with your access token
access_secret <- "BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe"  # Replace with your access secret
auth <- rtweet_app()
install.packages("tidytext")
install.packages("rtweet")
# Search for tweets related to R in Data Science
tweets <- search_tweets(q = "R Data Science", n = 1000)
# Clean and preprocess the text data
clean_tweets <- tweets %>%
select(text) %>%
mutate(text = gsub("http\\S+\\s*", "", text)) %>%  # Remove URLs
unnest_tokens(word, text) %>%
anti_join(stop_words)  # Remove stop words
# Analyze the text data
word_counts <- clean_tweets %>%
count(word, sort = TRUE)
# Visualize the most common words
word_counts %>%
top_n(10) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(fill = "skyblue") +
labs(x = "Word", y = "Frequency", title = "Top 10 Most Common Words in Tweets About R in Data Science") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("rtweet")
# api key = 4p2TY2sPaQXteLkh8U1gfmCrT
# api key Secret = 9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr
# brearer Token = AAAAAAAAAAAAAAAAAAAAAAuPtAEAAAAAisyHdDsuH14yIsDzog64no6qpjg%3DTHo1HByYfUDGerjl8qpAieA5JCNVFNiH6hVu1nm1tJ01LpIsYC
# access Token = 1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V
# ATSecret = BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe
#libraries
install.packages("rtweet")
install.packages("tidytext")
library(tidytext)
library(rtweet)
library(ggplot2)
library(dplyr)
# Replace "your-app-name", "yourLongApiKeyHere", "yourSecretKeyHere", "yourAccessTokenHere", and "yourAccessSecretHere" with your actual values
# Set your Twitter app name, API key, API secret, access token, and access secret
appname <- "your-app-name"  # Replace with your app name
key <- "4p2TY2sPaQXteLkh8U1gfmCrT"  # Replace with your API key
secret <- "y9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr"  # Replace with your API secret
access_token <- "1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V"  # Replace with your access token
access_secret <- "BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe"  # Replace with your access secret
auth <- rtweet_app()
install.packages("tidytext")
install.packages("rtweet")
# Search for tweets related to R in Data Science
tweets <- search_tweets(q = "R Data Science", n = 1000)
# Clean and preprocess the text data
clean_tweets <- tweets %>%
select(text) %>%
mutate(text = gsub("http\\S+\\s*", "", text)) %>%  # Remove URLs
unnest_tokens(word, text) %>%
anti_join(stop_words)  # Remove stop words
# Analyze the text data
word_counts <- clean_tweets %>%
count(word, sort = TRUE)
# Visualize the most common words
word_counts %>%
top_n(10) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(fill = "skyblue") +
labs(x = "Word", y = "Frequency", title = "Top 10 Most Common Words in Tweets About R in Data Science") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("rtweet")
# api key = 4p2TY2sPaQXteLkh8U1gfmCrT
# api key Secret = 9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr
# brearer Token = AAAAAAAAAAAAAAAAAAAAAAuPtAEAAAAAisyHdDsuH14yIsDzog64no6qpjg%3DTHo1HByYfUDGerjl8qpAieA5JCNVFNiH6hVu1nm1tJ01LpIsYC
# access Token = 1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V
# ATSecret = BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe
#libraries
install.packages("rtweet")
install.packages("tidytext")
library(tidytext)
library(rtweet)
library(ggplot2)
library(dplyr)
# Replace "your-app-name", "yourLongApiKeyHere", "yourSecretKeyHere", "yourAccessTokenHere", and "yourAccessSecretHere" with your actual values
# Set your Twitter app name, API key, API secret, access token, and access secret
appname <- "your-app-name"  # Replace with your app name
key <- "4p2TY2sPaQXteLkh8U1gfmCrT"  # Replace with your API key
secret <- "y9CXhjpzquCTC9ZYM3LkSboPldwze5TgP46lJiXsqdLjB0OLRRr"  # Replace with your API secret
access_token <- "1742725746332684288-9WFHRIC1u6inFQZp0uZrJGenqFOo9V"  # Replace with your access token
access_secret <- "BpGPX2xb1aAfqpcSnuzR6CxCAewDJ6qtl2I2uAaJpRjYe"  # Replace with your access secret
auth <- rtweet_app()
